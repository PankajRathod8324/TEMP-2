<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu Modifier</title>
    @* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.0/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> *@
</head>

<body>

    <div class="container mt-4">
        <table class="table">
            <thead class="bg-light">
                <tr>
                    <th>
                        <input class="form-check-input me-2" type="checkbox" id="selectAll"> Name
                    </th>
                    <th>Unit</th>
                    <th>Rate</th>
                    <th>Quantity</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var menumodifier in Model)
                {
                    <tr data-id="@menumodifier.ModifierId" data-name="@menumodifier.ModifierName"
                        data-unit="@menumodifier.UnitName" data-rate="@menumodifier.ModifierRate"
                        data-quantity="@menumodifier.Quantity">
                        <td>
                            <div class="d-flex align-items-center">
                                <input class="checkclass form-check-input me-3" type="checkbox" name="chkItem" />
                                <p class="text-secondary mb-0">@menumodifier.ModifierName 12</p>
                            </div>
                        </td>

                        <td>
                            <p class="fw-normal mb-1">@menumodifier.UnitName</p>
                        </td>

                        <td>
                            <p class="fw-normal mb-1">@menumodifier.ModifierRate</p>
                        </td>

                        <td>
                            <p class="fw-normal mb-1">@menumodifier.Quantity</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>


        <div class="d-flex justify-content-end align-items-center my-3 gap-2">
            <form id="paginationForm" method="get" class="d-flex align-items-center me-3">
                <span class="me-2">Items per page:</span>
                <select id="pageSizeDropdownForModifier" class="form-select form-select-sm w-auto me-3">
                    <option value="5" selected="@(ViewBag.PageSize == 5)">5</option>
                    <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
                    <option value="15" selected="@(ViewBag.PageSize == 15)">15</option>
                </select>

                <span id="pagination-summary" class="text-muted">
                    Showing @(Model.PageSize * (Model.PageNumber - 1) + 1) -
                    @((Model.PageSize * Model.PageNumber) > Model.TotalItemCount ? Model.TotalItemCount :
                                        (Model.PageSize * Model.PageNumber))
                    of @Model.TotalItemCount results
                </span>
            </form>

            <div id="paginationContainer">
                @if (Model.HasPreviousPage)
                {
                    <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber - 1)">
                        <i class="fa-solid fa-chevron-left"></i>
                    </button>
                }

                <span class="mx-2">Page @Model.PageNumber of @Model.PageCount</span>

                @if (Model.HasNextPage)
                {
                    <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber + 1)">
                        <i class="fa-solid fa-chevron-right"></i>
                    </button>
                }
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            

            $("#pageSizeDropdownForModifier").change(function () {
                console.log("Dropdown changed");
                loadTaxes(1);
            });

            $("#searchInput").keyup(function () {
                loadTaxes(1);
            });

            $(document).on("click", ".pagination-btn", function (e) {
                e.preventDefault();
                var page = $(this).data("page");
                loadTaxes(page);
            });

            $("#pageSizeDropdown").change(function (event) {
                event.preventDefault();
                loadTaxes(1);
            });

            // Select/Deselect All Checkboxes
            window.selectedModifiers = window.selectedModifiers || []; // Store globally

            $(document).on("change", 'input[name="chkItem"]', function () {
                let modifierId = $(this).closest("tr").data("id");
                let modifierName = $(this).closest("tr").data("name");
                let unit = $(this).closest("tr").data("unit");
                let rate = $(this).closest("tr").data("rate");
                let quantity = $(this).closest("tr").data("quantity");

                if (this.checked) {
                    if (!window.selectedModifiers.some(modifier => modifier.modifierId === modifierId)) {
                        window.selectedModifiers.push({ modifierId, name: modifierName, unit, rate, quantity });
                    }
                } else {
                    window.selectedModifiers = window.selectedModifiers.filter(modifier => modifier.modifierId !== modifierId);
                }
            });

            // Individual Checkbox Handling
            @* $(document).on("change", "input[name='chkItem']", function () {
                let id = $(this).closest("tr").data("id");
                if ($(this).prop("checked")) {
                    if (!selectedModifiers.includes(id)) {
                        selectedModifiers.push(id);
                    }
                } else {
                    selectedModifiers = selectedModifiers.filter(item => item !== id);
                }
                localStorage.setItem("selectedModifiers", JSON.stringify(selectedModifiers));
            }); *@

                // Ensure selected checkboxes persist after pagination
                function restoreCheckboxState() {
                    let selectedModifiers = window.selectedModifiers;
                    selectedModifiers.forEach(modifier => {
                        $(`tr[data-id="${modifier.modifierId}"]`).find('input[name="chkItem"]').prop("checked", true);
                    });
                }

            function loadTaxes(page = 1) {
                var search = $("#searchInput").val();
                var pageSize = $("#pageSizeDropdownForModifier").val();

                console.log("Page:", page, "PageSize:", pageSize);

                $.ajax({
                    url: '/Menu/GetAllModifier',
                    type: 'GET',
                    data: {
                        search: search,
                        page: page,
                        pageSize: pageSize
                    },
                    success: function (data) {
                        $("#modifierTable").html(data);
                        restoreCheckboxState();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching items:', error);
                    }
                });
            }

            @* restoreCheckboxState(); *@
        });
    </script>


</body>

</html>