@using X.PagedList
@using X.PagedList.Mvc

@model Entities.ViewModel.MenuCategoryVM

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PizzaShop</title>
    @* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> *@
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @* <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" /> *@
    @* <script src='https://code.jquery.com/jquery-3.7.0.js'></script> *@

</head>

<body>
    <div class="col-lg-6 col-md-6 col-sm-9 categoryTobevisible  bg-light p-3">

        <div class="accordion" id="accordionPanelsStayOpenExample">
            <div class="accordion-item">
                <h2 class="accordion-header" id="panelsStayOpen-headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true"
                        aria-controls="panelsStayOpen-collapseOne">
                        <div class="row">
                            <div class="col ">
                                <h3 class=" fs-3">Category </h3>
                            </div>
                            <div class="col text-end">
                                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                    class="bi bi-plus-square mt-2" data-bs-toggle="modal"
                                    data-bs-target="#addCategoryModal" viewBox="0 0 16 16">
                                    <path
                                        d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                                    <path
                                        d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                </svg>
                            </div>
                        </div>
                    </button>
                </h2>
                <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show"
                    aria-labelledby="panelsStayOpen-headingOne">
                    <div class="accordion-body">


                        <div class="overflow-y-scroll  mt-3" style="max-width: 1000px; max-height: 600px;">
                            @foreach (var category in Model.menuCategories)
                            {
                                <div class="row hoverDivCategory">
                                    <div class="col">
                                        <p class="fs-5"><i class="fa-solid fa-grip-vertical me-2"></i>@category.CategoryName
                                        </p>
                                    </div>
                                    <div class="hoverIcon col text-end mt-2">
                                        <a class="text-black"> <i class="fa-solid fa-marker" data-bs-toggle="modal"
                                                data-bs-target="#editCategoryModal" data-id="@category.CategoryId"
                                                data-name="@category.CategoryName"
                                                data-description="@category.CategoryDescription"></i></a>
                                        <a href=""><i class="fa-regular fa-trash-can ms-4 text-black" data-bs-toggle="modal"
                                                data-bs-target="#myModal" data-id="@category.CategoryId"></i></a>


                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <div class="col-12 d-flex justify-content-start">

        <div class="col-3 categoryTobehidden bg-light p-3">
            <div class="row">
                <div class="col ">
                    <h3 class=" fs-3">Category </h3>
                </div>
                <div class="col text-end">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                        class="bi bi-plus-square mt-2" data-bs-toggle="modal" data-bs-target="#addCategoryModal"
                        viewBox="0 0 16 16">
                        <path
                            d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                        <path
                            d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                    </svg>
                </div>
            </div>

            <div class="overflow-x-hidden  mt-3" style="max-width: 1000px; max-height: 400px;">
                @foreach (var category in Model.menuCategories)
                {
                    var modalId = "deleteModal" + category.CategoryId;
                    <div class="row hoverDivCategory" data-id="@category.CategoryId">
                        <div class="col-9">
                            <p class="fs-5" data-id="@category.CategoryId">
                                <i class=" fa-solid fa-grip-vertical me-2"></i>@category.CategoryName
                            </p>


                        </div>
                        <div class="hoverIcon col text-end mt-2">
                            <a class="text-black edit-btn" data-id="@category.CategoryId" data-name="@category.CategoryName"
                                data-description="@category.CategoryDescription" data-bs-toggle="modal"
                                data-bs-target="#editCategoryModal"> <i class="fa-solid fa-marker "></i></a>
                            <a data-bs-toggle="modal" data-bs-target="#@modalId"><i
                                    class="fa-regular fa-trash-can ms-4 text-black"></i></a>
                            @* <i class="fa-regular fa-trash-can ms-4 text-black" data-bs-toggle="modal"
                                data-bs-target="#@modalId"></i> *@

                            <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="exampleModalLabel"
                                aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                aria-label="Close"></button>
                                        </div>
                                        <div
                                            class="modal-body d-flex flex-column align-items-center justify-content-center">
                                            <img class="img-fluid" src="~/assest/toppng.com-warning-icon-2400x2400.png"
                                                alt="" style="width: 50px;">
                                            <div class="fs-4">Are you sure you want to delete category?</div>
                                        </div>
                                        <div class="modal-footer d-flex align-items-center justify-content-center">
                                            <form asp-controller="Menu" asp-action="DeleteCategory" method="post"
                                                asp-route-id="@category.CategoryId">
                                                <button type="submit" class="btn btn-primary">Yes</button>
                                            </form>
                                            <button type="button" class="btn btn-secondary"
                                                data-bs-dismiss="modal">No</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>


        <div class="col-xxl-9 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 bg-white p-3">
            <form method="get" id="searchForm" data-id="@Model.CategoryId">
                <div class="row d-flex mb-2 align-item-center justify-content-center ms-0 me-0 rounded">
                    <div class="hidden Categoryid" id="Categoryidsearch"></div>
                    <div class="col ">
                        <h1 class="">Items </h1>
                    </div>
                    <div class="col d-flex align-items-center gap-3 justify-content-end pe-0">
                        <input type="text" name="search" id="searchInput" class="form-control"
                            placeholder="Search Item">


                        <button type="button" class="btn btn-outline-primary"> <i
                                class="fa-regular fa-trash-can text-center " data-bs-toggle="modal"
                                data-bs-target="#deleteModal1"></i></button>
                        <div class="col-auto text-end">
                            <a data-bs-toggle="modal" data-bs-target="#newitemModal">
                                <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">
                                    <i class="fa-solid fa-plus"></i>New Item
                                </button>
                            </a>
                        </div>
                    </div>
                </div>
            </form>
            <div class="col table-responsive" id="Item">
                @* Item Table  *@


                <div id="menuItemsContainer">
                    @* @await Html.PartialAsync("_MenuItemsPV") *@
                </div>


            </div>

        </div>

    </div>
    @* <div class="modal " id="deleteModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                    <img class="img-fluid" src="~/assest/toppng.com-warning-icon-2400x2400.png" alt=""
                        style="width: 50px;">
                    <div class="fs-4">Are you sure you want to delete this user?</div>
                </div>
                <div class="modal-footer d-flex align-items-center justify-content-center">
                    <button type="button" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div> *@

    <div class="modal " id="editCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <form id="editCategoryForm" method="POST" asp-action="EditCategory" asp-controller="Menu">
                    <input type="hidden" asp-for="@Model.CategoryId" id="CategoryId" name="CategoryId" />

                    <div class="modal-body">

                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" asp-for="@Model.CategoryName" id="CategoryName"
                                name="CategoryName">
                            <label for="CategoryName">Name*</label>
                            <span asp-validation-for="@Model.CategoryName" class="text-danger"></span>
                        </div>

                        <div class="form-outline mb-4">
                            <textarea class="form-control" id="CategoryDescription" name="CategoryDescription"
                                asp-for="@Model.CategoryDescription" rows="4"></textarea>
                            <label for="CategoryDescription"></label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <div class="modal " id="addCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <form asp-action="AddMenuCategory" asp-controller="Menu" method="post">
                    <div class="modal-body">


                        <div class="form-floating mb-3">
                            <input type="text" asp-for="CategoryName" class="form-control" id="floatingInput">
                            <label for="floatingInput" asp-for="CategoryName">Name*</label>
                            <span asp-validation-for="CategoryName" class="text-danger"></span>
                        </div>

                        <div data-mdb-input-init class="form-outline mb-4">
                            <textarea class="form-control" id="form7Example7" placeholder="Description"
                                name="CategoryDescription" rows="4"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
    <div class="modal " id="deleteModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                    <img class="img-fluid" src="~/assest/toppng.com-warning-icon-2400x2400.png" alt=""
                        style="width: 50px;">
                    <div class="fs-4">Are you sure you want to delete this Items?</div>
                </div>
                <div class="modal-footer d-flex align-items-center justify-content-center">
                    <button type="submit" class="btn btn-primary deletebtn">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal " id="newitemModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <form id="Additem">
                    <div class="modal-header">
                        <h5 class="modal-title text-secondary" id="exampleModalLabel">Add New Menu Item</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">


                        <!-- Category Dropdown -->
                        <div class="row d-flex justify-space-between">
                            <div class="col-8 mt-1 pe-0">
                                <div class="row">
                                    <div class="col">
                                        <div class="form-floating">
                                            <select class="form-select" asp-for="CategoryId"
                                                asp-items="ViewBag.Categories" id="floatingSelect"
                                                aria-label="Floating label select example">
                                                <option selected>Select a Category</option>
                                            </select>
                                            <label for="floatingSelect">Categories*</label>
                                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                                        </div>
                                    </div>


                                    <!-- Name Input -->
                                    <div class="col">
                                        <div class="form-floating mb-3">
                                            <input type="text" asp-for="ItemName" class="form-control"
                                                id="floatingInput">
                                            <label for="floatingInput" asp-for="ItemName">Name*</label>
                                            <span asp-validation-for="ItemName" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>


                                <div class="row"> <!-- Item Type -->
                                    <div class="col">
                                        <div class="form-floating"> <select class="form-select" asp-for="ItemtypeId"
                                                asp-items="ViewBag.Itemtypes" id="floatingSelect"
                                                aria-label="Floating label select example">
                                                <option selected>Select a type</option>
                                            </select>
                                            <label for="floatingSelect">Item Type*</label>
                                            <span asp-validation-for="ItemtypeId" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Rate -->
                                    <div class="col">
                                        <div class="form-floating mb-3">
                                            <input type="text" asp-for="Rate" class="form-control" id="floatingInput">
                                            <label for="floatingInput" asp-for="Rate">Rate*</label>
                                            <span asp-validation-for="Rate" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Quantity -->
                                    <div class="col">
                                        <div class="form-floating mb-3">
                                            <input type="text" asp-for="Quantity" class="form-control"
                                                id="floatingInput">
                                            <label for="floatingInput" asp-for="Quantity">Quantity*</label>
                                            <span asp-validation-for="Quantity" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Unit -->
                                    <div class="col">
                                        <div class="form-floating"> <select class="form-select" asp-for="UnitId"
                                                asp-items="ViewBag.Units" id="floatingSelect"
                                                aria-label="Floating label select example">
                                                <option selected>Select a unit</option>
                                            </select>
                                            <label for="floatingSelect">Unit*</label>
                                            <span asp-validation-for="UnitId" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>


                                <!-- Modifier Groups -->
                                <div class="row">
                                    <!-- Switch Toggles -->
                                    <div class="col">
                                        <div
                                            class="form-check form-switch d-flex align-item-center justify-space-between gap-2 ">
                                            <input class="form-check-input  type=" checkbox" id="toggleSwitch"
                                                asp-for="IsAvailable">
                                            <label for="modifierGroups" class="form-label mt-1">Available</label>
                                        </div>
                                    </div>

                                    <div class="col">
                                        <div
                                            class="form-check form-switch d-flex align-item-center justify-space-between gap-2 ">
                                            <input class="form-check-input  type=" checkbox" id="toggleSwitch"
                                                asp-for="TaxDefault">
                                            <label for="modifierGroups" class="form-label mt-1">DefaultTax</label>
                                        </div>
                                    </div>

                                    <!-- Tax and Short Code -->
                                    <div class="col">
                                        <div class="form-floating mb-3">
                                            <input type="text" asp-for="TaxPercentage" class="form-control"
                                                id="floatingInput">
                                            <label for="floatingInput" asp-for="TaxPercentage">Tax Percentage</label>
                                            <span asp-validation-for="TaxPercentage" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Description -->
                                    <div class="col">
                                        <div class="form-floating mb-3">
                                            <input type="text" asp-for="ShortCode" class="form-control"
                                                id="floatingInput">
                                            <label for="floatingInput" asp-for="ShortCode">Short Code</label>
                                            <span asp-validation-for="ShortCode" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <textarea class="form-control" id="form7Example7" placeholder="Description"
                                            asp-for="Description" required rows="4"></textarea>
                                    </div>
                                </div>

                                <!-- Upload Image -->
                                <div class="col-12">
                                    <label for="uploadImage" class="form-label">Upload Image</label>
                                    <div class="border p-3 text-center" id="dropArea"
                                        style="border-style: dotted; cursor: pointer;">
                                        <input type="file" id="uploadImage" name="ImageFile" asp-for="ItemPhoto"
                                            class="d-none" accept="image/*">
                                        <label for="uploadImage" class="text-muted" style="cursor: pointer;">
                                            📁 Drag and Drop or Browse files
                                        </label>
                                        <div id="previewContainer" class="mt-2" style="display: none;">
                                            <img id="imagePreview" src="@Model.ItemPhoto" alt="Uploaded Image"
                                                style="max-width: 100px;">
                                            <span class="remove-image" id="removeImage"
                                                style="cursor: pointer;">❌</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card  text-center p-3 h-100" style="background-color: #fff4e6;">
                                    <select id="modifierGroupDropdown" class="form-select"
                                        modifier-id="@Model.ModifierGroupId">
                                        <option selected disabled>Select Modifier Groups</option>
                                        @foreach (var group in ViewBag.ModifierGroups)
                                        {
                                            <option value="@group.Value">@group.Text</option>
                                        }
                                    </select>
                                    <div id="modifierList"></div>
                                    <!-- This will store multiple selected modifier groups -->

                                </div>

                            </div>


                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>



    <script>


        document.addEventListener("DOMContentLoaded", function () {
            const categoryItems = document.querySelectorAll(".hoverDiv");
            console.log("Hello");

            categoryItems.forEach(item => {
                item.addEventListener("click", function () {
                    // Remove active class from all categories
                    categoryItems.forEach(i => i.classList.remove("active"));
                    // Add active class to the clicked category
                    this.classList.add("active");
                });
            });
        });
        $(document).ready(function () {
            $(".pagination-btn-edit").click(function (e) {
                e.preventDefault();
                let page = $(this).data("page");
                console.log("Page number:", page);
                loadModifiers(page);
            });

            var selectedCategoryId = 0;
            console.log(selectedCategoryId);

            $.ajax({
                url: '/Menu/MenuItem',  // Ensure this route matches your controller
                type: 'GET',
                data: {
                    categoryId: selectedCategoryId,
                },
                success: function (data) {
                    $("#menuItemsContainer").html(data);  // Update the menu items container
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching items:', error);
                }
            });

            $(".hoverDivCategory").click(function () {
                $(".hoverDivCategory").removeClass("active");
                $(this).addClass("active");
                console.log("hello i am in");
                selectedCategoryId = $(this).data("id");
                var categoryId = selectedCategoryId;
                loadMenuItems();
            });
            var selectedModifierGroups = [];


            // Handle search and sorting
            $("#searchForm").on("submit", function (e) {
                e.preventDefault();
                loadMenuItems();
            });

            // Clear search
            $("#clearSearch").on("click", function () {
                $("#searchInput").val("");
                $("#sortOrder").val("");
                $("#searchForm").submit();
            });

            // Function to Load Items Based on Filters
            function loadMenuItems(page = 1) {
                var search = $("#searchInput").val();
                var sortOrder = $("#sortOrder").val();
                var pageSize = $("#pageSizeDropdown").val();

                console.log("Category:", selectedCategoryId, "Page:", page, "PageSize:", pageSize);

                $.ajax({
                    url: '/Menu/MenuItem',  // Ensure this route matches your controller
                    type: 'GET',
                    data: {
                        categoryId: selectedCategoryId,
                        search: search,
                        sortOrder: sortOrder,
                        page: page,
                        pageSize: pageSize
                    },
                    success: function (data) {
                        $("#menuItemsContainer").html(data);  // Update the menu items container
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching items:', error);
                    }
                });
            }


            $(".deletebtn").click(function () {

                console.log("Save button is Pressed");
                DeleteItems();
            });

            // Handle Page Size Change
            $("#pageSizeDropdown").change(function () {
                loadMenuItems(1); // Reset to page 1 when changing page size
            });

            // Handle Pagination
            $(document).on("click", ".pagination-btn", function (e) {
                e.preventDefault();
                var page = $(this).data("page"); // Get page number from button
                loadMenuItems(page);
            });

            // Handle Category Selection
            $(".category-btn").click(function () {
                selectedCategoryId = $(this).data("category-id"); // Get selected category ID
                loadMenuItems(1); // Reset to page 1
            });

            // Handle Search Input
            $("#searchInput").keyup(function () {
                loadMenuItems(1); // Reset to page 1 on search
            });

            // Handle Sort Order Change
            $("#sortOrder").change(function () {
                loadMenuItems(1); // Reset to page 1 when sorting changes
            });
            @* $.ajax({
                url: '@Url.Action("MenuItem", "Menu")',
                type: 'GET',
                success: function (data) {
                    $('#Item').append(data);
                },
                error: function (xhr, status, error) {
                    console.error('error Feching items:', error);
                }
            }); *@
                // Handle pagination click dynamically
                $(document).on("click", ".pagination a", function (e) {
                    e.preventDefault();
                    var page = $(this).attr("href").split("page=")[1];
                    loadMenuItems(page);
                });
            $(".edit-btn").click(function () {
                var id = $(this).data("id");
                var name = $(this).data("name");
                var Description = $(this).data("description")

                $("#CategoryId").val(id);
                $("#CategoryName").val(name);
                $("#CategoryDescription").val(Description);
                $("#Modal").modal("show");
            });
            $(document).on("click", ".delete-group", function () {
                $(this).closest(".modifier-group").remove();
                var deleteid = $(this).data('groupid');
                console.log(deleteid);

                selectedModifierGroups = selectedModifierGroups.filter(modifier => modifier.modifiergroupid != deleteid);
                console.log(selectedModifierGroups);
            });

            $("#modifierGroupDropdown").change(function () {
                var groupId = $(this).val();

                if (!groupId) {
                    $("#modifierList").html(""); // Clear list if no group selected
                    return;
                }

                // Find the parent div where the new modifier group will be appended
                var parentDiv = $("#modifierList");

                $.ajax({
                    url: '@Url.Action("GetModifiersByGroup", "Menu")',
                    type: 'GET',
                    data: { groupId: groupId },
                    success: function (response) {
                        // Append the new modifier group to the UI
                        console.log("Response:", response);
                        parentDiv.append(response);

                        // Once the partial view is appended, attach event listeners to min/max dropdowns
                        setTimeout(() => {
                            var newGroup = parentDiv.find(".modifier-group").last(); // Get the latest added modifier group

                            var minSelection = newGroup.find(".min-input").val();
                            var maxSelection = newGroup.find(".max-input").val();

                            selectedModifierGroups.push({
                                modifiergroupid: groupId,
                                minSelection: minSelection,
                                maxSelection: maxSelection
                            });

                            console.log("Selected Modifier Groups:", selectedModifierGroups);
                        }, 500);
                    }
                });
            });

            // Listen for changes in min/max selection
            $(document).on("change", ".min-input, .max-input", function () {
                var parentGroup = $(this).closest(".modifier-group");
                var groupId = parentGroup.find("input[name*='ModifierGroupId']").val();
                var minSelection = parentGroup.find(".min-input").val();
                var maxSelection = parentGroup.find(".max-input").val();

                // Update the selectedModifierGroups array
                selectedModifierGroups.forEach((group) => {
                    if (group.modifiergroupid == groupId) {
                        group.minSelection = minSelection;
                        group.maxSelection = maxSelection;
                    }
                });

                console.log("Updated Selected Modifier Groups:", selectedModifierGroups);
            });

            // When submitting form, send selectedModifierGroups data
            @* $("#Additem").click(function (e) {
                e.preventDefault();

                var formData = new FormData($("#menuForm")[0]);
                formData.append("selectedModifierGroups", JSON.stringify(selectedModifierGroups));

                $.ajax({
                    url: '@Url.Action("SubmitMenu", "Menu")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert("Menu Item Added Successfully!");
                    }
                });
            });*@
                $("#Additem").submit(function (e) {
                    e.preventDefault();
                    console.log("Submitting AddItem form");

                    // Serialize form fields
                    var formData = $(this).serializeArray();
                    var formDataobj = {};

                    // Convert serialized array into an object
                    $.each(formData, function (index, field) {
                        formDataobj[field.name] = field.value;
                    });

                    // Get the selected image file
                    var fileInput = $("#uploadImage")[0].files[0]; // Get the selected file
                    if (fileInput) {
                        var reader = new FileReader();
                        console.log("enter");
                        reader.onloadend = function () {
                            // Convert the file to base64 and append it to formDataobj
                            formDataobj["ItemPhoto"] = reader.result;

                            // Ensure ModifierGroupIdForAdd is an array
                            formDataobj.ModifierGroupIds = JSON.stringify(selectedModifierGroups); // Convert array to JSON string

                            var submissionData = JSON.stringify(formDataobj); // Final JSON string

                            console.log("Sending data:", submissionData);

                            // Now that the image is added, send the AJAX request
                            $.ajax({
                                url: '/Menu/AddMenuItem',
                                type: 'POST',
                                contentType: "application/json",
                                data: submissionData,
                                success: function (response) {
                                    alert("Item Added Successfully!");
                                },
                                error: function (xhr, status, error) {
                                    console.error('Error:', xhr.responseText); // Log detailed error
                                }
                            });
                        };

                        // Read the image file as base64
                        reader.readAsDataURL(fileInput);
                    } else {
                        // If no image is selected, still send the form data without the image
                        formDataobj.ModifierGroupIds = JSON.stringify(selectedModifierGroups); // Convert array to JSON string
                        var submissionData = JSON.stringify(formDataobj); // Final JSON string

                        console.log("Sending data:", submissionData);

                        $.ajax({
                            url: '/Menu/AddMenuItem',
                            type: 'POST',
                            contentType: "application/json",
                            data: submissionData,
                            success: function (response) {
                                alert("Item Added Successfully!");
                            },
                            error: function (xhr, status, error) {
                                console.error('Error:', xhr.responseText); // Log detailed error
                            }
                        });
                    }
                });


            // Handle Delete Modifier Group



        });
        function DeleteItems() {

            let Item = [];

            $('tbody tr').each(function () {
                @* let row *@
                    @* let RoleId = '@Model.First().RoleId'; *@
                    let itemId = $(this).attr("data-id");
                let checkeditem = $(this).find(".checkclass").is(":checked");


                if (checkeditem) {
                    Item.push({
                        ItemId: itemId,

                    });
                }

            });
            console.log("Hiiiii");
            console.log(Item);



            $.ajax({
                url: '@Url.Action("DeleteItem", "Menu")',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(Item),
                success: function () {
                    @* window.location.href = @Url.Action("MenuItem", "Menu"); *@
                        console.log('Save');

                },
                error: function (xhr, status, error) {
                    console.error('error Feching items:', error);
                }
            });
        }

        function deleteCategory(categoryId) {
            $.ajax({
                url: '/Menu/DeleteCategory',
                type: 'POST',
                data: { id: categoryId },
                success: function (data) {
                    Console.log("Successfully Created!!")
                },
                error: function (xhr, status, error) {
                    console.error('error Feching items:', error);
                }
            })
        }
        const dropArea = document.getElementById("dropArea");
        const fileInput = document.getElementById("uploadImage");
        const previewContainer = document.getElementById("previewContainer");
        const imagePreview = document.getElementById("imagePreview");
        const removeImage = document.getElementById("removeImage");

        const validExtensions = ["image/jpeg", "image/png", "image/gif", "image/webp", "image/svg+xml"];

        function handleFileUpload(file) {
            if (!validExtensions.includes(file.type)) {
                toastr.error("Only image files (JPEG, PNG, GIF, WebP, SVG) are allowed!");
                fileInput.value = ""; // Clear input
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
                previewContainer.style.display = "block";
            };
            reader.readAsDataURL(file);
        }

        // File selection via input
        fileInput.addEventListener("change", function (event) {
            if (event.target.files.length > 0) {
                handleFileUpload(event.target.files[0]);
            }
        });

        // Drag & Drop functionality
        dropArea.addEventListener("dragover", function (e) {
            e.preventDefault();
            dropArea.style.borderColor = "blue";
        });

        dropArea.addEventListener("dragleave", function () {
            dropArea.style.borderColor = "";
        });

        dropArea.addEventListener("drop", function (e) {
            e.preventDefault();
            dropArea.style.borderColor = "";
            if (e.dataTransfer.files.length > 0) {
                fileInput.files = e.dataTransfer.files; // Assign dropped file
                handleFileUpload(e.dataTransfer.files[0]);
            }
        });

        // Remove image preview
        removeImage.addEventListener("click", function () {
            previewContainer.style.display = "none";
            fileInput.value = "";
        });



    </script>
    @* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script> *@




</body>

</html>