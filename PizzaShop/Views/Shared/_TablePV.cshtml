@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList< Entities.ViewModel.SectionVM>

@{
    ViewData["Title"] = "Table Page";
    @* if (TempData["Message"] != null)
    {
        <div class="alert alert-@TempData["MessageType"]">@TempData["Message"]</div>
    } *@
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu Page</title>
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/media.css">
    <link rel='stylesheet' href='https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body class="bg-white">

    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
        <table class="table  align-middle text-center">
            <thead class="bg-light" style="position: sticky; top: 0; z-index: 10;">
                <tr>
                    <th class="text-start" width="40%">
                        <input type="checkbox" class="me-2" id="selectAll" style="width: 16px; height: 16px;" />
                        Name
                    </th>
                    <th>Capacity</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Any(table => table.TableId != null))
                {
                    @foreach (var table in Model)
                    {
                        if (table.TableId != null)
                        {
                            <tr class="tblclass" data-id="@table.TableId" data-status="@table.StatusName"
                                data-sectionid="@table.SectionId">
                                <td class="text-start">
                                    <div class="d-flex align-items-center">
                                        <input type="checkbox" name="chkItem" class="checkclass me-2" />

                                        <div class="ms-2">
                                            <p class="text-secondary mb-0 fw-bold">@table.TableName</p>
                                        </div>
                                    </div>
                                </td>

                                <td>
                                    <p class="fw-bold text-dark mb-0">@table.Capacity</p>
                                </td>
                                <td>
                                    @if (@table.StatusName == "Available")
                                    {
                                        <span class="badge badge-secondary rounded-pill bg-success d-inline">Available</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary rounded-pill bg-secondary d-inline">Occupied</span>
                                    }

                                </td>
                                <td>
                                    <button class="btn btn-sm " data-bs-toggle="modal" data-bs-target="#editTableModal"
                                        onclick="editTable(@table.TableId, @Model.PageNumber)">
                                        <i class="fa-solid fa-marker"></i>
                                    </button>
                                    <button class="btn btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#deleteModalTable"
                                        onclick="setDeleteItemId(@table.TableId)">
                                        <i class="fa-regular fa-trash-can"></i>
                                    </button>

                                </td>
                            </tr>
                        }
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted">
                            <p class="mb-0">No Tables found!</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="d-flex justify-content-end align-items-center my-3 gap-2">
        <form id="paginationForm" method="get" class="d-flex align-items-center me-3">
            <span class="me-2">Items per page:</span>
            <select id="pageSizeDropdown" class="form-select form-select-sm w-auto me-3"
                data-sectionid="@Model.FirstOrDefault()?.SectionId">
                <option value="5" selected="@(ViewBag.PageSize == 5)">5</option>
                <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
                <option value="15" selected="@(ViewBag.PageSize == 15)">15</option>
            </select>


            <span id="pagination-summary" class="text-muted">
                Showing @(Model.PageSize * (Model.PageNumber - 1) + 1) -
                @((Model.PageSize * Model.PageNumber) > Model.TotalItemCount ? Model.TotalItemCount : (Model.PageSize *
                                Model.PageNumber))
                of @Model.TotalItemCount results
            </span>
        </form>

        <div id="paginationContainer">
            @if (Model.HasPreviousPage)
            {
                <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber - 1)"
                    data-sectionid="@Model.FirstOrDefault()?.SectionId">
                    <i class="fa-solid fa-chevron-left"></i>
                </button>
            }

            <span class="mx-2">Page @Model.PageNumber of @Model.PageCount</span>

            @if (Model.HasNextPage)
            {
                <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber + 1)"
                    data-sectionid="@Model.FirstOrDefault()?.SectionId">
                    <i class="fa-solid fa-chevron-right"></i>
                </button>
            }
        </div>

    </div>



    <div class="modal" id="editTableModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title text-secondary" id="exampleModalLabel">Edit Table</h5>

                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body" id="modalbody">
                    @* Editmodal will be shown here *@
                </div>

            </div>

        </div>
    </div>
    @* <div class="modal" id="deleteModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                    <img class="img-fluid" src="~/assest/toppng.com-warning-icon-2400x2400.png" alt=""
                        style="width: 50px;">
                    <div class="fs-4">Are you sure you want to delete this item?</div>
                </div>
                <div class="modal-footer d-flex align-items-center justify-content-center">
                    <button type="submit" class="btn btn-primary" onclick="deleteItem()">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div> *@






    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

    <!-- jQuery -->
    <script src='https://code.jquery.com/jquery-3.7.0.js'></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    @* 
    <script src="~/js/userPage.js"></script> *@




</body>
<script>
    $(document).ready(function () {



        $("#pageSizeDropdown").change(function (event) {
            event.preventDefault();

            var selectedPageSize = $(this).val();
            var sectionid = $(this).data("sectionid");
            var currentPage = 1;
            console.log("dropdown");
            console.log(selectedPageSize);
            console.log(sectionid);


            $.ajax({
                url: '@Url.Action("MenuTable", "TableAndSection")',
                type: 'GET',
                data: {
                    sectionId: sectionid,
                    PageSize: selectedPageSize,
                    PageNumber: currentPage
                },
                beforeSend: function () {
                    $("#pageSizeDropdown").prop("disabled", true);
                },
                success: function (data) {
                    $("#menutablesContainer").html(data);
                    $("#pageSizeDropdown").prop("disabled", false);
                },
                error: function () {
                    alert("Failed to update items per page.");
                    $("#pageSizeDropdown").prop("disabled", false);
                }
            });
        });





    });
    $(".deletebtn").click(function () {

        console.log("Save button is Pressed");
        DeleteItems();
    });
    function editTable(tableid, pagenumber) {
        console.log(pagenumber);
        console.log("HOmenefhjmdejhedj," + tableid);
        $.ajax({
            url: '@Url.Action("EditTable", "TableAndSection")',
            type: 'GET',
            data: { tableId: tableid, pagenumber: pagenumber },
            success: function (data) {
                $("#modalbody").html(data);
            },
            error: function (xhr, status, error) {
                console.error('Error fetching items:', error);
            }
        });
    }

    function DeleteItems() {

        let Table = [];
        let flag = true;
        let globsectionId;

        $('tbody tr').each(function () {
            @* let row *@
                @* let RoleId = '@Model.First().RoleId'; *@
                let tableId = $(this).attr("data-id");
            let statusName = $(this).attr("data-status");
            let sectionId = $(this).attr("data-sectionid");
            globsectionId = sectionId;
            let checkedtable = $(this).find(".checkclass").is(":checked");
            console.log(tableId);



            if (checkedtable) {
                if (statusName == "Available") {
                    Table.push({
                        TableId: tableId,

                    });
                }
                else {

                    flag = false;
                    console.log("Invalid");
                }

            }


        });
        console.log("Hiiiii");
        console.log(Table);
        console.log(flag);



        if (flag) {
            $.ajax({
                url: '@Url.Action("DeleteTable", "TableAndSection")',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(Table),
                success: function (response) {
                    document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
                    document.querySelectorAll(".modal").forEach(el => el.remove());
                    toastr.success('Deleted Successfully', "Success");
                    loadTable(globsectionId);
                },
                error: function (xhr, status, error) {
                    console.error('error Feching items:', error);
                }
            });

        }
        else {

            document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
            document.querySelectorAll(".modal").forEach(el => el.remove());
            loadTable(globsectionId);

            toastr.warning('Please Select Valid Field To Delete', "Warning");
        }
    }

    function loadTable(sectionId) {
        console.log(sectionId);
        $.ajax({
            url: '@Url.Action("MenuTable", "TableAndSection")',  // Ensure this route matches your controller
            type: 'GET',
            data: {
                sectionId: sectionId,
            },
            success: function (data) {
                $("#menutablesContainer").html(data);  // Update the menu items container
            },
            error: function (xhr, status, error) {
                console.error('Error fetching items:', error);
            }
        });
    }
</script>

</html>