@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList< Entities.ViewModel.TaxVM>


<body>
    <div class="table-responsive bg-white" style="max-height: 400px; overflow-y: auto;">
            <table class="table  align-middle text-center">
                <thead class="bg-light">
                    <tr>
                        <th class="text-secondary fs-5">
                            Name
                        </th>
                        <th class="text-secondary fs-5" >Type</th>
                        <th class="text-secondary fs-5">IsEnabled</th>
                        <th class="text-secondary fs-5">IsDefault</th>
                        <th class="text-secondary fs-5">Tax Value</th>
                        <th class="text-secondary fs-5">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Any(tax => tax.TaxId != null))
                    {
                        @foreach (var tax in Model)
                        {
                            if (tax.TaxId != null)
                            {
                                <tr class="tblclass" data-id="@tax.TaxId">
                                    <td>
                                        <p class="fw-bold text-secondary  mb-0 ">@tax.TaxName</p>
                                    </td>

                                    <td>
                                        <p class="fw-bold text-secondary  mb-0">@tax.TaxTypeName</p>
                                    </td>
                                    <td>
                                        <div class="form-check form-switch">
                                                                    <input class="form-check-input canEdit" type="checkbox" id="toggleSwitch"
                                                                        @(tax.IsEnabled ? "checked" : "") disabled>
                                                                </div>
                                    </td>
                                    <td>
                                    <div class="form-check form-switch">
                                                                    <input class="form-check-input canEdit" type="checkbox" id="toggleSwitch"
                                                                        @(tax.IsDefault  ? "checked" : "") disabled>
                                                                </div>
                                    </td>
                                    <td>
                                        <p class="fw-bold text-secondary  mb-0">@tax.TaxAmount @(tax.TaxTypeId == 1 ? "â‚¹" : "%")</p>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm "
                                            onclick="editTax(@tax.TaxId, @Model.PageNumber)">
                                            <i class="fa-solid fa-marker"></i>
                                        </button>
                                        <button class="btn btn-sm ms-2 deleteBtn"  data-id="@tax.TaxId">
                                            <i class="fa-regular fa-trash-can"></i>
                                        </button>

                                    </td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center text-muted">
                                <p class="mb-0">No Tables found!</p>
                            </td>
                        </tr>
                    }
 
                </tbody>

            </table>


    <div class="d-flex justify-content-end align-items-center my-3 gap-2">
                <form id="paginationForm" method="get" class="d-flex align-items-center me-3">
                    <span class="me-2">Items per page:</span>
                    <select id="pageSizeDropdown" class="form-select form-select-sm w-auto me-3">
                        <option value="5" selected="@(ViewBag.PageSize == 5)">5</option>
                        <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
                        <option value="15" selected="@(ViewBag.PageSize == 15)">15</option>
                    </select>


                    <span id="pagination-summary" class="text-muted">
                        Showing @(Model.PageSize * (Model.PageNumber - 1) + 1) -
                        @((Model.PageSize * Model.PageNumber) > Model.TotalItemCount ? Model.TotalItemCount :
                                                (Model.PageSize *
                                                Model.PageNumber))
                        of @Model.TotalItemCount results
                    </span>
                </form>

                <div id="paginationContainer">
                    @if (Model.HasPreviousPage)
                    {
                        <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber - 1)">
                            <i class="fa-solid fa-chevron-left"></i>
                        </button>
                    }

                    <span class="mx-2">Page @Model.PageNumber of @Model.PageCount</span>

                    @if (Model.HasNextPage)
                    {
                        <button class="btn btn-outline-dark pagination-btn" data-page="@(Model.PageNumber + 1)">
                            <i class="fa-solid fa-chevron-right"></i>
                        </button>
                    }
                </div>

    </div>

    <div class="modal" id="editTaxModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog  modal-dialog-centered">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title text-secondary" id="exampleModalLabel">Edit Tax</h5>

                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body" id="modalbody">
                    @* Editmodal will be shown here *@
                </div>

            </div>

        </div>
    </div>

       <div class="modal" id="deleteTaxModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <input type="hidden" id="currentPage" name="currentPage" value="@ViewBag.Page" />
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                    <img class="img-fluid" src="~/assest/toppng.com-warning-icon-2400x2400.png" alt=""
                        style="width: 50px;">
                    <div class="fs-4">Are you sure you want to delete this item?</div>
                </div>
                <div class="modal-footer d-flex align-items-center justify-content-center">
                    <button type="submit" class="btn btn-primary deleteTax">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

</div>

    <script>
        $(document).ready(function () {
            
            $("#pageSizeDropdown").change(function (event) {
                event.preventDefault();

                var selectedPageSize = $(this).val();
                var currentPage = 1;
                console.log("dropdown");
                console.log(selectedPageSize);


                $.ajax({
                    url: '@Url.Action("Tax", "TaxAndFee")',
                    type: 'GET',
                    data: {
                        PageSize: selectedPageSize,
                        PageNumber: currentPage
                    },
                    beforeSend: function () {
                        $("#pageSizeDropdown").prop("disabled", true);
                    },
                    success: function (data) {
                        $("#taxTable").html(data);
                        $("#pageSizeDropdown").prop("disabled", false);
                    },
                    error: function () {
                        alert("Failed to update items per page.");
                        $("#pageSizeDropdown").prop("disabled", false);
                    }
                });
            });
             $(".deleteBtn").click(function (e) {
                e.preventDefault();
                console.log("delete");
                @* var taxId = $(this).data("id"); *@
                $.ajax({
                    url: '/TaxAndFee/DeletePermission',
                    type: 'POST',
                    success: function (response) {
                        $("#deleteTaxModal").modal("show");
                    },
                    error: function (xhr, status, error) {
                        toastr.error('You do not have Permission', "UnAuthorise");// Log detailed error
                    }
                });
            });
            $(".deleteTax").click(function (e) {
                e.preventDefault();
                var taxId = $(".deleteBtn").data("id");
                console.log(taxId);
                $.ajax({
                    url: '/TaxAndFee/DeleteTax',
                    type: 'POST',
                    data: { taxId: taxId },
                    success: function (response) {
                        var myModal = bootstrap.Modal.getInstance(document.getElementById("deleteTaxModal"));
                        if (myModal) myModal.hide();
                        document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
                        toastr.success('Tax Deleted Successfully!', "Success");
                        var currentPage = $("#currentPage").val();
                        console.log(currentPage);
                        loadTaxes(currentPage);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', xhr.responseText); // Log detailed error
                    }
                });
            });
        
        });
        

        function editTax(taxid, pagenumber) {
            console.log(pagenumber);
            console.log("HOmenefhjmdejhedj," + taxid);
            $.ajax({
                url: '@Url.Action("EditTax", "TaxAndFee")',
                type: 'GET',
                data: { taxId: taxid, pagenumber: pagenumber },
                success: function (data) {
                    $("#editTaxModal").modal("show");
                    $("#modalbody").html(data);
                   
                },
                error: function (xhr, status, error) {
                    toastr.error('You do not have Permission', "UnAuthorise");
                }
            });
        }
         function loadTaxes(page = 1) {
            var search = $("#searchInput").val();
            @* var sortOrder = $("#sortOrder").val(); *@
            var pageSize = $("#pageSizeDropdown").val();

            console.log("Page:", page, "PageSize:", pageSize);
            console.log("I am inside water");

            $.ajax({
                url: '/TaxAndFee/Tax',  // Ensure this route matches your controller
                type: 'GET',
                data: {
                    search: search,
                    page: page,
                    pageSize: pageSize
                },
                success: function (data) {
                    $("#taxTable").html(data);  // Update the menu items container

                },
                error: function (xhr, status, error) {
                    console.error('Error fetching items:', error);
                }
            });
        }
    </script>
</body>